name: npm-publish

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        include:
          - goos: darwin
            goarch: amd64
            out: i18n-translator-darwin-x64
          - goos: darwin
            goarch: arm64
            out: i18n-translator-darwin-arm64
          - goos: linux
            goarch: amd64
            out: i18n-translator-linux-x64
          - goos: windows
            goarch: amd64
            out: i18n-translator-windows-x64.exe
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/${{ matrix.out }} ./cmd/main.go
          ls -la dist

      - name: Upload artifact ${{ matrix.out }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.out }}
          path: dist/${{ matrix.out }}

  release_and_publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Use tag version if present
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG#v}"
          echo "Setting package.json version to ${VERSION}"
          npm version --no-git-tag-version "${VERSION}"

      - name: Create GitHub Release (attach binaries)
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}